<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>新年快乐</title>
    <link href="/2024/02/09/%E9%BE%99%E5%B9%B4%E5%BF%AB%E4%B9%90/"/>
    <url>/2024/02/09/%E9%BE%99%E5%B9%B4%E5%BF%AB%E4%B9%90/</url>
    
    <content type="html"><![CDATA[<h1 id="2024，龙年快乐"><a href="#2024，龙年快乐" class="headerlink" title="2024，龙年快乐"></a>2024，龙年快乐</h1><p>在这个充满传统文化和祥和气息的中国农历龙年里，愿你在生活中如同龙般威武庄严，充满智慧和力量。愿你在新的一年里展翅飞翔，驾驭风云，创造自己的辉煌，祝福你在龙年里蒸蒸日上，万事如意！祝龙年吉祥，万事顺利！</p>]]></content>
    
    
    
    <tags>
      
      <tag>新年祝福</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新年快乐</title>
    <link href="/2024/01/01/%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/"/>
    <url>/2024/01/01/%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/</url>
    
    <content type="html"><![CDATA[<h1 id="海压竹枝底复举，风吹山角晦还明"><a href="#海压竹枝底复举，风吹山角晦还明" class="headerlink" title="海压竹枝底复举，风吹山角晦还明"></a>海压竹枝底复举，风吹山角晦还明</h1><p>又一年四季轮回！</p><p>友友们，新年快乐，平安健康！</p>]]></content>
    
    
    
    <tags>
      
      <tag>新年快乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python数据类型</title>
    <link href="/2023/12/05/Python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/2023/12/05/Python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Python数据类型"><a href="#Python数据类型" class="headerlink" title="Python数据类型"></a>Python数据类型</h1><p>1.整数类型：没有小数部分的数值，包含正整数、负整数和零。可以使用十进制、二进制（0b或0B)、八进制(0o或0O)、十六进制(0x或0X）表示</p><p>2.浮点类型：带有小数点的数值，由整数部分和小数部分组成。注意：两个浮点数进行运算时有概率会出现不确定的位数问题，可以使用round保留小数。Python中的复数与数学中的复数形式一致,都由实部和虚部组成。在Python中使用.real表示实部，使用.imag表示虚部</p><p>3.字符串类型：连续的字符序列，可以表示计算机所能识别的一切字符。字符串的界定符：单引号、双引号、三引号。</p><table><thead><tr><th align="center">转义字符</th><th align="center">描述说明</th></tr></thead><tbody><tr><td align="center">\n</td><td align="center">换行符</td></tr><tr><td align="center">\t</td><td align="center">水平制表位，用于横向跳到下一个制表位,一个制表位长度为8</td></tr><tr><td align="center">\“</td><td align="center">双引号</td></tr><tr><td align="center">\‘</td><td align="center">单引号</td></tr><tr><td align="center">\</td><td align="center">一个反斜杠</td></tr></tbody></table><p>字符串又被称为有序的字符序列，对字符串中的某个字符的检索称为索引</p><p>对字符串中某个字串或区间的检索称为切片，切片的语法结构为：字符串或字符串变量[N:M]</p><p>常用的字符串操作</p><table><thead><tr><th>操作符</th><th>描述说明</th></tr></thead><tbody><tr><td>x+y</td><td>将字符串x与y连接起来</td></tr><tr><td>x * n或n * x</td><td>复制n次字符串x</td></tr><tr><td>x in s</td><td>如果x是s的子串，结果为True，否则结果为False</td></tr></tbody></table><p>4.布尔类型：用来表示”真“或者”假“值的数据类型，在Python中使用True或False表示布尔类型的值，True表示整数1，Flase表示整数0。非零的整数的布尔值都为True，所有非空字符串的布尔值也为True。</p><p>布尔值为False的情况如下</p><p>1.False或者是None</p><p>2.数值中的0，包含0.0，虚数0</p><p>3.空虚列，包含空格字符串、空元组、空列表、空字典、空集合</p><p>4.自定义对象的实例 该对象的”_<em>bool</em><em>()”方法返回False或”_<em>len</em></em>()方法返回0</p><h1 id="数据类型的转换"><a href="#数据类型的转换" class="headerlink" title="数据类型的转换"></a>数据类型的转换</h1><table><thead><tr><th align="center">函数</th><th>描述说明</th></tr></thead><tbody><tr><td align="center">int(x)</td><td>将x转换为整数类型</td></tr><tr><td align="center">float(x)</td><td>将x转换为浮点类型</td></tr><tr><td align="center">str(x)</td><td>将x转化为字符串类型</td></tr><tr><td align="center">chr(x)</td><td>将x转换为一个字符</td></tr><tr><td align="center">ord(x)</td><td>将一个字符串x转换为其对应的整数值</td></tr><tr><td align="center">hex(x)</td><td>将一个整数x转换为一个十六进制字符串</td></tr><tr><td align="center">oct(x)</td><td>将一个整数x转换为一个八进制字符串</td></tr><tr><td align="center">bin(x)</td><td>将一个整数x转换为一个二进制字符串</td></tr></tbody></table><h1 id="eval函数"><a href="#eval函数" class="headerlink" title="eval函数"></a>eval函数</h1><p>eval函数：Python当中的一个内置函数，用于去掉字符串最外侧的引号，并按照Python语句方式执行去掉引号的字符串。eval()函数经常与input()函数一起使用</p><p>eval的语法格式：变量&#x3D;eval(字符串)</p><h1 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h1><p>算术运算符：用于处理四则运算的符号</p><table><thead><tr><th align="center">运算符</th><th align="center">描述说明</th><th align="center">示例</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">加法</td><td align="center">1+1</td><td align="center">2</td></tr><tr><td align="center">-</td><td align="center">减法</td><td align="center">1-1</td><td align="center">0</td></tr><tr><td align="center">*</td><td align="center">乘法</td><td align="center">3*3</td><td align="center">9</td></tr><tr><td align="center">&#x2F;</td><td align="center">除法</td><td align="center">10&#x2F;2</td><td align="center">5</td></tr><tr><td align="center">&#x2F;&#x2F;</td><td align="center">整除</td><td align="center">10&#x2F;&#x2F;3</td><td align="center">3</td></tr><tr><td align="center">%</td><td align="center">取余</td><td align="center">10%3</td><td align="center">1</td></tr><tr><td align="center">**</td><td align="center">幂运算</td><td align="center">2**4</td><td align="center">16</td></tr></tbody></table><p>算术运算符的优先级由高到低为：</p><p>第一级：**</p><p>第二级：* &#x2F; &#x2F;&#x2F; %</p><p>第三级：+  -</p><h1 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h1><table><thead><tr><th align="center">运算符</th><th align="center">描述说明</th><th align="center">示例</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">&#x3D;</td><td align="center">简单的赋值运算</td><td align="center">x&#x3D;y</td><td align="center">x&#x3D;y</td></tr><tr><td align="center">+&#x3D;</td><td align="center">加赋值</td><td align="center">x+&#x3D;y</td><td align="center">x&#x3D;x+y</td></tr><tr><td align="center">-&#x3D;</td><td align="center">减赋值</td><td align="center">x-&#x3D;y</td><td align="center">x&#x3D;x-y</td></tr><tr><td align="center">*&#x3D;</td><td align="center">乘赋值</td><td align="center">x*&#x3D;y</td><td align="center">x&#x3D;x*y</td></tr><tr><td align="center">&#x2F;&#x3D;</td><td align="center">除赋值</td><td align="center">x&#x2F;&#x3D;y</td><td align="center">x&#x3D;x&#x2F;y</td></tr><tr><td align="center">%&#x3D;</td><td align="center">取余赋值</td><td align="center">x%&#x3D;y</td><td align="center">x&#x3D;x%y</td></tr><tr><td align="center">**&#x3D;</td><td align="center">幂赋值</td><td align="center">x**&#x3D;y</td><td align="center">x&#x3D;x**y</td></tr><tr><td align="center">&#x2F;&#x2F;&#x3D;</td><td align="center">整除赋值</td><td align="center">x&#x2F;&#x2F;&#x3D;y</td><td align="center">x&#x3D;x&#x2F;&#x2F;y</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#Python链式赋值</span><br>a=b=c=<span class="hljs-number">100</span><br><span class="hljs-built_in">print</span>(a,b,c)<br><span class="hljs-comment">#Python系列解包赋值</span><br>a,b=<span class="hljs-number">10</span>,<span class="hljs-number">20</span><br><span class="hljs-built_in">print</span>(a,b)<br><span class="hljs-comment">#Python交换两个变量的值</span><br>a,b=b,a<br><span class="hljs-built_in">print</span>(a,b)<br></code></pre></td></tr></table></figure><h1 id="比较运算符-关系运算符"><a href="#比较运算符-关系运算符" class="headerlink" title="比较运算符(关系运算符)"></a>比较运算符(关系运算符)</h1><table><thead><tr><th align="center">运算符</th><th align="center">描述说明</th><th align="center">示例</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">&gt;</td><td align="center">大于</td><td align="center">98&gt;90</td><td align="center">True</td></tr><tr><td align="center">&lt;</td><td align="center">小于</td><td align="center">98&lt;90</td><td align="center">False</td></tr><tr><td align="center">&#x3D;&#x3D;</td><td align="center">等于</td><td align="center">98&#x3D;&#x3D;90</td><td align="center">False</td></tr><tr><td align="center">!&#x3D;</td><td align="center">不等于</td><td align="center">98!&#x3D;90</td><td align="center">True</td></tr><tr><td align="center">&gt;&#x3D;</td><td align="center">大于等于</td><td align="center">98&gt;&#x3D;90</td><td align="center">True</td></tr><tr><td align="center">&lt;&#x3D;</td><td align="center">小于等于</td><td align="center">98&lt;&#x3D;90</td><td align="center">False</td></tr></tbody></table><h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><table><thead><tr><th align="center">运算符</th><th align="center">描述说明</th><th align="center">用法</th><th align="center">结合方向</th></tr></thead><tbody><tr><td align="center">and</td><td align="center">逻辑与</td><td align="center">表达式1and表达式2</td><td align="center">从左到右</td></tr><tr><td align="center">or</td><td align="center">逻辑或</td><td align="center">表达式1or表达式2</td><td align="center">从左到右</td></tr><tr><td align="center">not</td><td align="center">逻辑非</td><td align="center">not表达式</td><td align="center">从右到左</td></tr></tbody></table><table><thead><tr><th align="center">表达式1</th><th align="center">表达式2</th><th align="center">表达式1and表达式2</th><th align="center">表达式1or表达式2</th><th align="center">not表达式1</th></tr></thead><tbody><tr><td align="center">True</td><td align="center">True</td><td align="center">True</td><td align="center">True</td><td align="center">False</td></tr><tr><td align="center">True</td><td align="center">False</td><td align="center">False</td><td align="center">True</td><td align="center">False</td></tr><tr><td align="center">False</td><td align="center">False</td><td align="center">False</td><td align="center">False</td><td align="center">True</td></tr><tr><td align="center">False</td><td align="center">True</td><td align="center">False</td><td align="center">True</td><td align="center">True</td></tr></tbody></table><h1 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h1><p>把数字看作二进制数来进行计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#按位与</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;按位与&quot;</span>,<span class="hljs-number">12</span>&amp;<span class="hljs-number">8</span>)<br><span class="hljs-comment">#按位或</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;按位或&quot;</span>,<span class="hljs-number">4</span>|<span class="hljs-number">8</span>)<br><span class="hljs-comment">#按位异或</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;按位异或&quot;</span>,<span class="hljs-number">12</span>^<span class="hljs-number">22</span>)<br><span class="hljs-comment">#按位取反</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;按位取反&quot;</span>,~<span class="hljs-number">8</span>)<br><span class="hljs-comment">#左移位</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;左移位&quot;</span>,<span class="hljs-number">2</span>&lt;&lt;<span class="hljs-number">2</span>)<span class="hljs-comment">#8 表示2向左移动两位相当于2*2*2=8</span><br><span class="hljs-comment">#右移位</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;右移位&quot;</span>,<span class="hljs-number">8</span>&gt;&gt;<span class="hljs-number">2</span>)<span class="hljs-comment">#2 向右移动两位相当于8/2=4 4/2=2</span><br></code></pre></td></tr></table></figure><p>运算符的优先级</p><table><thead><tr><th align="center">运算符</th><th align="center">描述说明</th></tr></thead><tbody><tr><td align="center">**</td><td align="center">幂运算</td></tr><tr><td align="center">~、+、-</td><td align="center">取反、正号、负号</td></tr><tr><td align="center">*、&#x2F;%、&#x2F;&#x2F;</td><td align="center">算术运算符</td></tr><tr><td align="center">+、-</td><td align="center">算术运算符</td></tr><tr><td align="center">&lt;&lt;、&gt;&gt;</td><td align="center">位运算中的左移位与右移位</td></tr><tr><td align="center">&amp;</td><td align="center">位运算中的按位与</td></tr><tr><td align="center">^</td><td align="center">位运算中的异或</td></tr><tr><td align="center">|</td><td align="center">位运算中的按位或</td></tr><tr><td align="center">&lt;、&lt;&#x3D;、&gt;、&gt;&#x3D;、!&#x3D;、&#x3D;&#x3D;</td><td align="center">比较运算符</td></tr><tr><td align="center">&#x3D;</td><td align="center">赋值运算符</td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python语法规范</title>
    <link href="/2023/11/30/Python%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83/"/>
    <url>/2023/11/30/Python%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83/</url>
    
    <content type="html"><![CDATA[<h2 id="Python注释方法"><a href="#Python注释方法" class="headerlink" title="Python注释方法"></a>Python注释方法</h2><p>1.使用#在目标代码行实现单行注释</p><p>2.使用单双引号在代码中实现多行注释</p><p>3.中文文档声明注释</p><h2 id="Python代码缩进"><a href="#Python代码缩进" class="headerlink" title="Python代码缩进"></a>Python代码缩进</h2><p>指每一行语句开始前的空白区域</p><p>用来表示Python程序间的包含和层级关系</p><p>类定义，函数定义，流程控制语句以及异常处理语句等行尾的冒号和下一行的缩进表示一个代码块的开始，而缩进结束，则表示一个代码块的结束</p><p>一般来说4个空格为一个缩进量</p><h2 id="Python保留字与标识符"><a href="#Python保留字与标识符" class="headerlink" title="Python保留字与标识符"></a>Python保留字与标识符</h2><p>保留字：指在Python中被赋予特定意义的一些单词，在开发程序时，不可以把这些保留字作为变量，函数，类，模块和其他对象的名称来使用，保留字严格区分大小写。开发中可以使用keyword这个第三方库查询具体的保留字</p><p>标识符：可以是字符（英文，中文）、下划线和数字，并且第一个字符不能是数字。不能使用Python中的保留字。标识符严格区分大小写。以下划线开头的标识符具有特殊意义，一般应避免使用相似的标识符。通常不建议使用中文作为标识符。</p><p>标识符的命名规范：</p><p>1.模块名尽量短小，并且全部使用小写字母，可以使用下划线分割多个字母 eg: leisiuser_infor</p><p>2.包名尽量短小，并且全部使用小写字母，不推荐使用下划线 eg: register.func</p><p>3.类名采用单词首字母大写的形式 eg: MyClass</p><p>4.模块内部的类采用“_”+Pascal风格的类名组成 eg: _InnerMyClass</p><p>5.函数、类的属性和方法的命名，全部使用小写字母，多个字母之间使用下划线分隔</p><p>6.常量命名时采用全部大写字母，可以使用下划线</p><p>7.使用单下划线“_”开头的模块变量或函数是受保护的，在使用”from xxx import xxx”语句从模块中导入时，这些模块变量或函数不能被导入</p><p>8.使用双下划线”__”开头的实例变量或方法是类私有的</p><p>9.以双下划线开头和结尾的是Python的专用标识</p><h2 id="Python变量与常量"><a href="#Python变量与常量" class="headerlink" title="Python变量与常量"></a>Python变量与常量</h2><p>变量的语法结构：变量名&#x3D;value    eg: user&#x3D;jay</p><p>变量的命名规则：</p><p>1.变量名必须是一个有效的标识符</p><p>2.变量名不能使用Python中的保留字</p><p>3.慎用类似O、I等大小写一样的字母</p><p>4.选择有意义的单词作为变量名</p><p>常量的命名规范：全部使用大写字母，一般不建议修改它的值</p>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>你听得到</title>
    <link href="/2023/11/20/%E4%BD%A0%E5%90%AC%E5%BE%97%E5%88%B0/"/>
    <url>/2023/11/20/%E4%BD%A0%E5%90%AC%E5%BE%97%E5%88%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="你听得到"><a href="#你听得到" class="headerlink" title="你听得到"></a>你听得到</h1><p>有谁能比我知道</p><p>你的温柔像羽毛</p><p>秘密躺在我怀抱</p><p>只有你能听得到</p><p>还有没有人知道</p><p>你的微笑像拥抱</p><p>多想藏着你的好</p><p>只有我看得到</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
